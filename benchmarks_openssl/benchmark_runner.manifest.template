# This is a general manifest template for running DuckDB.
# Don't use this manifest in production

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ execdir }}/duckdb_openssl/build/release/benchmark/benchmark_runner"

loader.log_level = "{{ log_level }}"
#loader.log_level = "trace"

loader.insecure__use_cmdline_argv = true

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}"
loader.env.PATH = "{{ execdir }}"
# Set HOME to suppress "warning: cannot find home directory"
loader.env.HOME = ""

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ execdir }}/duckdb_openssl/duckdb_benchmark_data/", uri = "file:{{ execdir }}/duckdb_openssl/duckdb_benchmark_data/" },
  { path = "{{ execdir }}/duckdb_openssl/benchmark/tpch/", uri = "file:{{ execdir }}/duckdb_openssl/benchmark/tpch/" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "{{ execdir }}/duckdb_openssl/build/release/duckdb", uri = "file:{{ execdir }}/duckdb_openssl/build/release/duckdb" },
  { path = "{{ execdir }}/duckdb_openssl/build/release/benchmark/benchmark_runner", uri = "file:{{ execdir }}/duckdb_openssl/build/release/benchmark/benchmark_runner" },
  { path = "{{ execdir }}/duckdb_openssl/build/release/src/libduckdb.so", uri = "file:{{ execdir }}/duckdb_openssl/build/release/src/libduckdb.so" },
  { path = "{{ execdir }}/duckdb_openssl/extension/tpch/", uri = "file:{{ execdir }}/duckdb_openssl/extension/tpch/" },
]

# Unfortunately, non-SGX Gramine cannot use special keys such as "_sgx_mrenclave", so for this
# example to work on both non-SGX and SGX versions we hardcode a dummy key. In SGX production case,
# it is recommended to remove this insecure key and instead use "_sgx_mrenclave"/"_sgx_mrsigner".
fs.insecure__keys.default = "ffeeddccbbaa99887766554433221100"

sgx.debug = true
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.enclave_size = "64G"
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '256' }}
sgx.preheat_enclave = true
#sgx.enable_stats = true

sys.stack.size = "8M"

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ execdir }}/duckdb_openssl/build/release/duckdb",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:{{ execdir }}/duckdb_openssl/build/release/benchmark/",
  "file:{{ execdir }}/duckdb_openssl/build/release/src/libduckdb.so",
  "file:{{ execdir }}/duckdb_openssl/extension/tpch/",
  "file:{{ execdir }}/duckdb_openssl/benchmark/tpch/"
]

# Gramine supports read and write operations on files. Appending to files is currently unsupported. Writing to trusted files is prohibited.

sgx.allowed_files = [
  "file:{{ execdir }}/duckdb_openssl/build/release/benchmark/",
  "file:{{ execdir }}/benchmarks/",
  "file:{{ execdir }}/duckdb_openssl/duckdb_benchmark_data/",
]
